<Activity mc:Ignorable="sap sap2010" x:Class="ProcessTransaction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>376.8,1466.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="ProcessTransaction" sap:VirtualizedContainerService.HintSize="336.8,1386.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ClientName" />
      <Variable x:TypeArguments="x:String" Name="ClientID" />
      <Variable x:TypeArguments="x:String" Name="ClientAddress" />
      <Variable x:TypeArguments="x:String" Name="CheckNumber" />
      <Variable x:TypeArguments="x:String" Name="CheckDate" />
      <Variable x:TypeArguments="x:String" Name="CheckAmount" />
      <Variable x:TypeArguments="x:String" Name="CheckDay" />
      <Variable x:TypeArguments="x:String" Name="CheckYear" />
      <Variable x:TypeArguments="x:String" Name="CheckMonth" />
      <Variable x:TypeArguments="x:String" Name="UpdateWorkItemComment" />
      <Variable x:TypeArguments="x:String" Name="Status" />
      <Variable x:TypeArguments="x:String" Name="CheckMonthNumber" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Extractring informations from PDFs&#xD;&#xA;" DisplayName="Invoke System 1 GetTaxId workflow" sap:VirtualizedContainerService.HintSize="314.4,132" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="System 1\System 1 GetTaxId.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_WIID">[in_TransactionItem("WIID").ToString]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ClientName">[ClientName]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ClientID">[ClientID]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ClientAddress">[ClientAddress]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_CheckNumber">[CheckNumber]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_CheckDate">[CheckDate]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_CheckAmount">[CheckAmount]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Transaction number &quot; + in_TransactionNumber.ToString + &quot; Client Name is : &quot; + ClientName + &quot; , Client ID : &quot; + ClientID + &quot; , Client Address : &quot; + ClientAddress]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Transaction number &quot; + in_TransactionNumber.ToString + &quot; Check Number : &quot; + CheckNumber + &quot; , Check Date : &quot; + CheckDate  + &quot; , Check Amount : &quot; + CheckAmount]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Since scanned PDF does always return exact result about the date, we need additional formating to get correct values" DisplayName="Invoke SeparateDate workflow" sap:VirtualizedContainerService.HintSize="314.4,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="System 1\SeparateDate.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Clientdate">[CheckDate]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Day">[CheckDay]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Month">[CheckMonth]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Year">[CheckYear]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_MonthInt">[CheckMonthNumber]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Go to Search for Checks page" DisplayName="Invoke System 1 ClickSearchCheck workflow" sap:VirtualizedContainerService.HintSize="314.4,116" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="System 1\System 1 ClickSearchCheck.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Searching for check&#xD;&#xA;" DisplayName="Invoke System 1 SearchForCheck workflow" sap:VirtualizedContainerService.HintSize="314.4,132" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="System 1\System 1 SearchForCheck.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Day">[CheckDay]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Month">[CheckMonth]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CheckNumber">[CheckNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Year">[CheckYear]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke System 1 IsCheckAvailable workflow" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="System 1\System 1 IsCheckAvailable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="out_CheckLocation" />
        <InArgument x:TypeArguments="x:String" x:Key="in_ClientID">[ClientID]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CheckNumber">[CheckNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_WIID">[in_TransactionItem("WIID").ToString]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_UpdateWorkItemComment">[UpdateWorkItemComment]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Status">[Status]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Day">[CheckDay]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Month">[CheckMonthNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Year">[CheckYear]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke System 1 Update WorkItem workflow" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="System 1\System 1 Update WorkItem.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_WIID">[in_TransactionItem("WIID").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfirmationID" />
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_UpdateWorkItemComment">[UpdateWorkItemComment]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Status">[Status]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>